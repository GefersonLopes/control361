name: CI / CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      VITE_GOOGLE_MAPS_API_KEY:       ${{ secrets.VITE_GOOGLE_MAPS_API_KEY }}
      VITE_API_CLIENT_KEY:            ${{ secrets.VITE_API_CLIENT_KEY }}
      VITE_BASE_URL_API_CLIENT:       ${{ secrets.VITE_BASE_URL_API_CLIENT }}
      VITE_GOOGLE_MAPS_COORDINATES_URL: ${{ secrets.VITE_GOOGLE_MAPS_COORDINATES_URL }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with: { node-version: "18" }

      - uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - run: npm ci
      - run: npm run lint
      # - run: npm test -- --coverage
      - run: npm run build

  deploy:
    needs: ci
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build & push Docker
        env:
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_TOKEN"
          docker build -t "$DOCKERHUB_USER/my-app:${{ github.sha }}" .
          docker push "$DOCKERHUB_USER/my-app:${{ github.sha }}"
          docker tag  "$DOCKERHUB_USER/my-app:${{ github.sha }}" "$DOCKERHUB_USER/my-app:latest"
          docker push "$DOCKERHUB_USER/my-app:latest"

      - uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: "--prod"
